name: Ensure Mandatory Code Owners Approve

on:
  pull_request:
    types: [opened, synchronize, reopened]
  # schedule:
  #   - cron: '*/30 * * * *'  # Run every 30 minutes to check for approvals

jobs:
  codeowners-approval:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Get Codeowners file content from the .github folder using Bash
      - name: Get Codeowners data using Bash
        id: get-codeowners
        run: |
          # Define variables for the owner, repo, and path
          OWNER=${{ github.repository_owner }}
          REPO=$(basename ${{ github.repository }})
          FILE_PATH=".github/CODEOWNERS"

          # Make an API call to get the content of the CODEOWNERS file
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$OWNER/$REPO/contents/$FILE_PATH")

          # Extract mandatory users from CODEOWNERS file
          CODEOWNERS=($(echo "* @vinodjyadav @rishabhvy" | grep -o '@[^ ]*' | sed 's/@//g'))

          # Debugging: Print all codeowners correctly
          echo "Print codeowners users from file: ${CODEOWNERS[@]}"

         # Fetch the list of approved users from GitHub API
        APPROVED_USERS=$(curl -s -H "Authorization: token ***" \
        "https://api.github.com/repos/nitya-v-yadav/ado2github/pulls/11/reviews" \
         | jq -r '.[] | select(.state == "APPROVED") | .user.login')

        echo "Approved users: $APPROVED_USERS"

       # Initialize approval count for mandatory code owners
         APPROVAL_COUNT=0
         REQUIRED_APPROVALS=${#CODEOWNERS[@]}  # Number of mandatory approvals

      # Loop over code owners to check if they've approved
        for owner in "${CODEOWNERS[@]}"; do
        echo "Checking if $owner has approved..."
        if echo "$APPROVED_USERS" | grep -qw "$owner"; then
        ((APPROVAL_COUNT++))
        echo "$owner has approved."
        else
        echo "$owner has NOT approved."
        fi
        done

        echo "Number of mandatory code owner approvals: $APPROVAL_COUNT"
        echo "Required mandatory approvals: $REQUIRED_APPROVALS"

       # Check if all mandatory code owners have approved
       if [ "$APPROVAL_COUNT" -ne "$REQUIRED_APPROVALS" ]; then
      echo "Not all mandatory code owners have approved. PR cannot be merged yet."
      exit 1  # Fail the job to block the merge
      else
      echo "All mandatory code owners have approved the PR. PR can be merged."
      fi
